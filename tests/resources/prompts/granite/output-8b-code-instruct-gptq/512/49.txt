System:
Solve the following coding problem. Wrap your code answer using ```


Question:
Write a Java program the reads an XML file, parses it using the `javax.xml.parsers` package, and converts the XML data into a custom Java object.


Answer:
Here is a sample Java program that reads an XML file, parses it using the `javax.xml.parsers` package, and converts the XML data into a custom Java object:

```java
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import java.io.File;

public class XMLParser {
    public static void main(String[] args) {
        try {
            File file = new File("data.xml");
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(file);
            Element root = document.getDocumentElement();
            NodeList nodeList = root.getElementsByTagName("person");
            for (int i = 0; i < nodeList.getLength(); i++) {
                Element element = (Element) nodeList.item(i);
                String name = element.getElementsByTagName("name").item(0).getTextContent();
                int age = Integer.parseInt(element.getElementsByTagName("age").item(0).getTextContent());
                System.out.println("Name: " + name + ", Age: " + age);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

This program uses the `javax.xml.parsers` package to parse the XML file and create a `Document` object. It then retrieves the root element of the document and iterates over the `person` elements, extracting the `name` and `age` elements from each `person` element and printing them to the console.<|endoftext|>