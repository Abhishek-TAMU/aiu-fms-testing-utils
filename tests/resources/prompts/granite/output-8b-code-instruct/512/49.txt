System:
Solve the following coding problem. Wrap your code answer using ```


Question:
Write a Java program the reads an XML file, parses it using the `javax.xml.parsers` package, and converts the XML data into a custom Java object.


Answer:
Here is a sample Java program that reads an XML file, parses it using the `javax.xml.parsers` package, and converts the XML data into a custom Java object:

```java
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import java.io.File;

public class XmlParser {
    public static void main(String[] args) {
        try {
            File xmlFile = new File("data.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(xmlFile);
            doc.getDocumentElement().normalize();
            System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
            NodeList nList = doc.getElementsByTagName("person");
            System.out.println("----------------------------");
            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
                System.out.println("\nCurrent Element :" + nNode.getNodeName());
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    System.out.println("ID : " + eElement.getAttribute("id"));
                    System.out.println("Name : " + eElement.getElementsByTagName("name").item(0).getTextContent());
                    System.out.println("Email : " + eElement.getElementsByTagName("email").item(0).getTextContent());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

This program uses the `javax.xml.parsers` package to parse the XML file and extract the data. It creates a `Document` object from the XML file, and then iterates over the `person` elements in the XML file. For each `person` element, it extracts the `id`, `name`, and `email` attributes and prints them to the console.<|endoftext|>